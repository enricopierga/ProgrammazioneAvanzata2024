services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: dbUser
      POSTGRES_PASSWORD: mySecretPassword
      POSTGRES_DB: defaultDb
    networks:
      - application-network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dbUser"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always

  transits:
    build:
      context: ./transits
    container_name: transits
    environment:
      DB_HOST: postgres
      DB_USER: dbUser
      DB_PASS: mySecretPassword
      DB_NAME: defaultDb
      PORT: 3001
      JWT_PRIVATE_KEY: pippotransits
      DB_PORT: 5432
      IS_DEMO: true
      CLEAN_DB: false
    networks:
      - application-network
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001/healthcheck || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always

  payments:
    build:
      context: ./payments
    container_name: payments
    environment:
      DB_HOST: postgres
      DB_USER: dbUser
      DB_PASS: mySecretPassword
      DB_NAME: defaultDb
      PORT: 3000
      JWT_PRIVATE_KEY: pippopayments
      DB_PORT: 5432
      IS_DEMO: true
      CLEAN_DB: true

    networks:
      - application-network
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/healthcheck || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always

networks:
  application-network:
    driver: bridge
